# -*- coding: utf-8 -*-
"""gradioapp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/149OonZ8WrHtdhO9k3wA4XmJGWYRNeYQd

# MNIST DIGIT CLASSIFIER APP

# Gradio Web App Deployment
"""

import gradio as gr
import numpy as np
from PIL import Image
from sklearn.datasets import fetch_openml
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# Step 1: Train Random Forest Classifier (only once)
mnist = fetch_openml('mnist_784', version=1, as_frame=False)
X, y = mnist.data, mnist.target.astype(int)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=10000, random_state=42)
rf_clf = RandomForestClassifier(n_estimators=100, random_state=42)
rf_clf.fit(X_train, y_train)

# Step 2: Prediction Function
def predict_digit(image):
    if image is None:
        return "Please draw or upload a digit image."

    # Convert to grayscale, resize to 28x28
    img = image.convert("L").resize((28, 28))
    img_array = np.array(img).reshape(1, -1)
    pred = rf_clf.predict(img_array)[0]
    return f"Predicted Digit: {pred}"

# Step 3: Gradio Interface with Drawing + Upload support
gr.Interface(
    fn=predict_digit,
    # Removed the 'tool="sketch"' argument as it's not supported
    inputs=gr.Image(type="pil", image_mode="L"),
    outputs=gr.Textbox(),
    title="✍️ MNIST Digit Classifier",
    description="Draw a digit using your mouse or upload a 28x28 grayscale image. The model will predict it!",
    examples=[] # Remove the problematic example URL
).launch()